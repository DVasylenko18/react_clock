{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timeId","this","window","setInterval","setState","_prevProps","prevState","console","info","toUTCString","slice","clearInterval","className","props","name","React","Component","getRandomName","value","now","toString","App","clockName","hasClock","clockId","document","addEventListener","event","preventDefault","debug","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,OAAS,EALX,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,OAASE,OAAOC,aAAY,WAC/B,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SAEzB,OAXP,gCAcE,SAAmBM,EACjBC,GACIA,EAAUR,OAASG,KAAKJ,MAAMC,MAEhCS,QAAQC,KAAKP,KAAKJ,MAAMC,KAAKW,cAAcC,OAAO,IAAK,MAlB7D,kCAsBE,WACER,OAAOS,cAAcV,KAAKD,UAvB9B,oBA0BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKY,MAAMC,OAGb,YAED,sBAAMF,UAAU,cAAhB,SACGd,EAAKW,cAAcC,OAAO,IAAK,YAtC1C,GAA2BK,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAUX,IAAMG,EAAb,4MACExB,MAAe,CACbyB,UAAW,UACXC,UAAU,GAHd,EAMEC,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBvB,KAAKuB,QAAUtB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEkB,UAAWL,QAC1B,MACHQ,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKxB,SAAS,CAAEmB,UAAU,OAE5BE,SAASC,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBACN,EAAKxB,SAAS,CAAEmB,UAAU,SAlBhC,gCAsBE,SAAmBlB,EACjBC,GACIA,EAAUgB,YAAcrB,KAAKJ,MAAMyB,WAAarB,KAAKJ,MAAM0B,UAE7DhB,QAAQsB,MAAR,uBAA8BvB,EAAUgB,UAAxC,eAAwDrB,KAAKJ,MAAMyB,cA1BzE,kCA8BE,WACEpB,OAAOS,cAAcV,KAAKuB,WA/B9B,oBAkCE,WACE,MAAgCvB,KAAKJ,MAA7ByB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKX,UAAU,MAAf,UACE,6CAGEW,GACE,cAAC,EAAD,CAAOT,KAAMQ,WA3CzB,GAAyBP,IAAMC,WCd/Bc,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.eec82694.chunk.js","sourcesContent":["import React from 'react';\n\ntype ClockProps = {\n  name: string;\n};\n\ntype State = {\n  time: Date,\n};\n\nexport class Clock extends React.Component<ClockProps, State> {\n  state: State = {\n    time: new Date(),\n  };\n\n  timeId = 0;\n\n  componentDidMount() {\n    this.timeId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line no-console\n    }, 1000);\n  }\n\n  componentDidUpdate(_prevProps: Readonly<ClockProps>,\n    prevState: Readonly<State>): void {\n    if (prevState.time !== this.state.time) {\n      // eslint-disable-next-line no-console\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timeId);\n  }\n\n  render(): React.ReactNode {\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {};\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  clockId = 0;\n\n  componentDidMount() {\n    this.clockId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault(); // not to show the context menu\n      this.setState({ hasClock: false });\n    });\n    document.addEventListener('click', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentDidUpdate(_prevProps: Readonly<Props>,\n    prevState: Readonly<State>): void {\n    if (prevState.clockName !== this.state.clockName && this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.clockId);\n  }\n\n  render(): React.ReactNode {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {\n          hasClock && (\n            <Clock name={clockName} />\n          )\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}